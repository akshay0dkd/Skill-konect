rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read any profile.
    // WARNING: The write rule is overly permissive for demonstration purposes and should be secured in production,
    // for example by using Cloud Functions to handle connection logic.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;

      match /reviews/{reviewId} {
        allow read: if request.auth != null;
        allow create: if request.auth != null && request.auth.uid != userId;
      }
    }

    // Users can read requests they are involved in.
    // Users can create requests.
    // The recipient of a request can update it (to accept/reject).
    match /mentorship_requests/{requestId} {
      allow read: if request.auth != null && (resource.data.fromUserId == request.auth.uid || resource.data.toUserId == request.auth.uid);
      allow create: if request.auth != null && request.resource.data.fromUserId == request.auth.uid;
      allow update: if request.auth != null && resource.data.toUserId == request.auth.uid;
    }

    // Users can manage conversations they are a part of.
    match /conversations/{conversationId} {
      allow read, update: if request.auth != null && request.auth.uid in resource.data.participants;
      allow create: if request.auth != null && request.auth.uid in request.resource.data.participants;
      
      match /messages/{messageId} {
        allow read, create: if request.auth != null && get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants.hasAny([request.auth.uid]);
      }
    }

    // Rules for tasks
    match /tasks/{taskId} {
      // Users can read tasks assigned to them or by them
      allow read: if request.auth != null && (resource.data.assignedTo == request.auth.uid || resource.data.assignedBy == request.auth.uid);
      // Users can create tasks and assign them to others, ensuring they are the creator
      allow create: if request.auth != null && request.resource.data.assignedBy == request.auth.uid;
      // Users can update tasks assigned to them (e.g., to change status)
      allow update: if request.auth != null && resource.data.assignedTo == request.auth.uid;
    }

    // Anyone can read skills.
    match /skills/{skillId} {
      allow read: if true;
    }
    
    // Allow logging of auth errors
    match /authErrors/{errorId} {
      allow create: if true;
    }
  }
}